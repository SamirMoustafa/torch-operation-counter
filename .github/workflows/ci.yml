name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest numpy torch
        pip install .
    - name: Run tests
      run: pytest

  upload_to_pypi:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Check if version exists on PyPI
      id: check_version
      run: |
        PACKAGE_NAME=$(python setup.py --name)
        CURRENT_VERSION=$(python setup.py --version)
        OUTPUT=$(twine check dist/*)
        if ! echo "$OUTPUT" | grep -q 'PASSED'; then
          echo "Check failed, not uploading"
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "Check passed, proceed with upload."
          echo "exists=false" >> $GITHUB_ENV
        fi
    - name: Upload to PyPI
      if: env.exists == 'false'
      run: twine upload --skip-existing dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
